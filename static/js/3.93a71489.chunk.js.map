{"version":3,"sources":["Pages/SpotPage.js"],"names":["SpotPage","colorMode","useColorMode","navigate","useNavigate","place","useParams","useState","currentSpots","setCurrentSpots","searchTerm","setSearchTerm","skip","setSkip","useSpots","target","spots","search","loadMore","setLoadMore","isInitialMount","useRef","useEffect","current","term","length","w","gridGap","my","px","title","color","maxW","onChange","e","currentTarget","value","cityMap","map","city","templateColumns","base","sm","lg","xl","spot","onClick","ID","renderCard","variant","disabled"],"mappings":"gOAuIeA,UA/HE,WACf,IAAQC,EAAcC,cAAdD,UACFE,EAAWC,cACTC,EAAUC,cAAVD,MACR,EAAwCE,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAASF,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBC,YAAS,CAAEC,OAAQ,cAAgBV,GAA3D,mBAAOW,EAAP,KAAcC,EAAd,KACA,EAAgCV,oBAAS,GAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACMC,EAAiBC,kBAAO,GAC9BC,qBAAU,WACJF,EAAeG,QACjBH,EAAeG,SAAU,GAEzBJ,GAAY,GACZN,EAAQ,GACRJ,EAAgB,IAChBQ,EAAO,CAAEO,KAAMd,EAAYE,KAAM,OAElC,CAACF,IACJY,qBAAU,WACR,GAAa,IAATV,EACF,MAAO,GAEPK,EAAO,CAAEO,KAAMd,EAAYE,WAE5B,CAACA,IACJU,qBAAU,WACRH,IAA+B,IAAjBH,EAAMS,SACpBhB,EAAgB,GAAD,mBAAKD,GAAL,YAAsBQ,OAEpC,CAACA,IAsDJ,OACE,eAAC,IAAD,CAAQU,EAAE,OAAOC,QAAS,EAAGC,GAAI,GAAjC,UACE,cAAC,IAAD,CAAQC,GAAI,EAAZ,SACE,cAAC,IAAD,CACEC,MAAM,4BACNC,MAAqB,UAAd9B,EAAwB,YAAc,gBAGjD,cAAC,IAAD,CACE+B,KAAK,QACLC,SAAU,SAACC,GAAD,OAAOvB,EAAcuB,EAAEC,cAAcC,QAC/CA,MAAO1B,EAHT,SAKG,YAAI2B,KAASC,KAAI,SAACC,GAAD,OAChB,wBAAsBH,MAAOG,EAAK,GAAlC,SACGA,EAAK,IADKA,EAAK,SAKtB,cAAC,IAAD,CACEb,EAAE,MACFc,gBAAiB,CACfC,KAAM,iBACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,kBAENjB,QAAS,EARX,SA5Be,SAACX,GAClB,OAAOA,EAAMsB,KAAI,SAACO,GAAD,OACf,cAAC,IAAD,CAEEA,KAAMA,EACNC,QAAS,kBAAM3C,EAAS,uBAAD,OAAwB0C,EAAKE,OAF/CF,EAAKE,OAmCTC,CAAWxC,KAEd,cAAC,IAAD,CACEyC,QAAQ,UACRC,UAAWhC,EACX4B,QAAS,kBAAMjC,EAAQD,EAAO,KAHhC,SAKGM,EAAW,2BAAS","file":"static/js/3.93a71489.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react'\nimport { VStack, Grid, useColorMode, Select, Button } from '@chakra-ui/react'\nimport { cityMap } from 'data/cityData'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { useSpots } from 'hooks'\nimport { SectionDivider } from 'Components/SectionDivider'\nimport { SpotCard } from 'Components/Cards'\n// import useMyToast from 'hooks/useMyToast'\nconst SpotPage = () => {\n  const { colorMode } = useColorMode()\n  const navigate = useNavigate()\n  const { place } = useParams()\n  const [currentSpots, setCurrentSpots] = useState([])\n  const [searchTerm, setSearchTerm] = useState(place)\n  const [skip, setSkip] = useState(0)\n  const [spots, search] = useSpots({ target: 'ScenicSpot' }, place)\n  const [loadMore, setLoadMore] = useState(true)\n  const isInitialMount = useRef(true)\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false\n    } else {\n      setLoadMore(true)\n      setSkip(0)\n      setCurrentSpots([])\n      search({ term: searchTerm, skip: 0 })\n    }\n  }, [searchTerm])\n  useEffect(() => {\n    if (skip === 0) {\n      return {}\n    } else {\n      search({ term: searchTerm, skip })\n    }\n  }, [skip])\n  useEffect(() => {\n    setLoadMore(!(spots.length === 0))\n    setCurrentSpots([...currentSpots, ...spots])\n    // console.log(currentSpots)\n  }, [spots])\n  // useEffect(() => {\n  //   if (isInitialMount.current) {\n  //     isInitialMount.current = false\n  //   } else {\n  //     if (loadMore === false) {\n  //       errorToast('資料已經到最底囉')\n  //     }\n  //   }\n  // }, [loadMore])\n  // const renderCard = spots =>\n  //   spots.map(spot => (\n  //     <AspectRatio key={spot.ID} ratio={1.67 / 1}>\n  //       <Flex\n  //         key={spot.ID}\n  //         justifyContent='end !important'\n  //         borderRadius='10px'\n  //         overflow='hidden'\n  //         flexDirection='column'\n  //         boxShadow='lg'\n  //         marginBottom='40px'\n  //         bg='brand.100'\n  //         backgroundPosition='bottom'\n  //         backgroundSize='cover'\n  //         backgroundRepeat='no-repeat'\n  //         backgroundImage={\n  //           spot.Picture.PictureUrl1\n  //             ? spot.Picture.PictureUrl1\n  //             : 'http://www.vvc.cl/wp-content/uploads/2016/09/ef3-placeholder-image.jpg'\n  //         }\n  //         onClick={() => navigate(`/scenicspots/detail/${spot.ID}`)}\n  //       >\n  //         <Heading\n  //           w='100%'\n  //           background={colorMode === 'light' ? 'white' : 'brand.black'}\n  //           color={colorMode === 'light' ? 'brand.200' : 'brand.grey'}\n  //           textAlign='center'\n  //           size={{ base: 'sm', sm: 'md' }}\n  //           py={3}\n  //         >\n  //           {spot.Name}\n  //         </Heading>\n  //       </Flex>\n  //     </AspectRatio>\n  //   ))\n  const renderCard = (spots) => {\n    return spots.map((spot) => (\n      <SpotCard\n        key={spot.ID}\n        spot={spot}\n        onClick={() => navigate(`/scenicspots/detail/${spot.ID}`)}\n      />\n    ))\n  }\n  return (\n    <VStack w=\"100%\" gridGap={7} my={14}>\n      <VStack px={5}>\n        <SectionDivider\n          title=\"想去哪玩?\"\n          color={colorMode === 'light' ? 'brand.200' : 'brand.100'}\n        />\n      </VStack>\n      <Select\n        maxW=\"300px\"\n        onChange={(e) => setSearchTerm(e.currentTarget.value)}\n        value={searchTerm}\n      >\n        {[...cityMap].map((city) => (\n          <option key={city[1]} value={city[1]}>\n            {city[0]}\n          </option>\n        ))}\n      </Select>\n      <Grid\n        w=\"80%\"\n        templateColumns={{\n          base: 'repeat(1, 1fr)',\n          sm: 'repeat(2, 1fr)',\n          lg: 'repeat(3, 1fr)',\n          xl: 'repeat(4, 1fr)'\n        }}\n        gridGap={5}\n      >\n        {renderCard(currentSpots)}\n      </Grid>\n      <Button\n        variant=\"default\"\n        disabled={!loadMore}\n        onClick={() => setSkip(skip + 30)}\n      >\n        {loadMore ? '載入更多' : '已到底部'}\n      </Button>\n    </VStack>\n  )\n}\n\nexport default SpotPage\n"],"sourceRoot":""}