{"version":3,"sources":["Components/Map/Map.js","Pages/DetailPage.js"],"names":["MyMap","lat","lng","name","colorMode","useColorMode","Marker","position","flexDirection","transform","onClick","window","open","as","MdLocationOn","h","w","color","base","sm","md","borderRadius","overflow","size","zIndex","bootstrapURLKeys","key","process","center","defaultZoom","DetailPage","navigate","useNavigate","useState","currentDetail","setCurrentDetail","nearbySpots","setNearbySpots","nearbyRests","setNearbyRests","nearbySleeps","setNearbySleeps","useParams","target","id","useNearby","nearbyScenicSpots","searchNearbyScenicSpots","nearbyRestaurants","searchNearbyRestaurants","nearbyHotels","searchNearbyHotels","useDetail","detail","search","isInitialMount","useRef","useEffect","current","Position","PositionLat","lon","PositionLon","renderTag","tagItem","py","px","background","fontSize","renderNearby","spots","map","spot","ID","gridGap","my","templateColumns","lg","backgroundColor","src","Picture","PictureUrl1","placeholder","City","Class1","Class2","Class3","Level","Name","spacing","wordBreak","FiClock","OpenTime","Phone","FaPhoneAlt","href","WebsiteUrl","RiGlobalLine","rel","FiMapPin","Grade","AiFillStar","DescriptionDetail","SectionDivider","title","xl"],"mappings":"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","file":"static/js/6.f4c2a705.chunk.js","sourcesContent":["import { Flex, Icon, useColorMode, Heading } from '@chakra-ui/react'\n// import { Flex } from '@chakra-ui/react'\nimport { MdLocationOn } from 'react-icons/md'\nimport GoogleMapReact from 'google-map-react'\nimport PropTypes from 'prop-types'\n\nconst MyMap = ({ lat, lng, name }) => {\n  const { colorMode } = useColorMode()\n  const Marker = () => (\n    <Flex\n      position=\"absolute\"\n      flexDirection=\"column\"\n      transform=\"translate(-50%, -100%)\"\n      onClick={() =>\n        window.open(\n          `http://www.google.com/maps/search/${name}/@${lat},${lng},20z`,\n          '_blank'\n        )\n      }\n    >\n      <Icon\n        as={MdLocationOn}\n        h=\"50px\"\n        w=\"50px\"\n        color={colorMode === 'light' ? 'brand.200' : 'brand.black'}\n      />\n    </Flex>\n  )\n  return (\n    <Flex\n      h={{ base: '218px', sm: '300px', md: '523px' }}\n      w=\"80%\"\n      borderRadius=\"16px\"\n      overflow=\"hidden\"\n    >\n      <Heading\n        color={colorMode === 'light' ? 'brand.200' : 'brand.black'}\n        transform=\"translate(8px, 5px)\"\n        position=\"absolute\"\n        size=\"sm\"\n        zIndex={1}\n      >\n        點擊圖示開啟Google map\n      </Heading>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_KEY }}\n        center={{ lat, lng }}\n        defaultZoom={12}\n      >\n        <Marker lat={lat} lng={lng} />\n      </GoogleMapReact>\n    </Flex>\n  )\n}\n\nMyMap.propTypes = {\n  lat: PropTypes.number,\n  lng: PropTypes.number,\n  name: PropTypes.string\n}\n\nexport default MyMap\n","import {\n  VStack,\n  List,\n  ListItem,\n  ListIcon,\n  Grid,\n  Image,\n  Flex,\n  Text,\n  Heading,\n  useColorMode,\n  Divider\n} from '@chakra-ui/react'\nimport { AiFillStar } from 'react-icons/ai'\nimport { FaPhoneAlt } from 'react-icons/fa'\nimport { RiGlobalLine } from 'react-icons/ri'\nimport { FiMapPin, FiClock } from 'react-icons/fi'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { useDetail, useNearby } from 'hooks'\nimport { useRef, useState, useEffect } from 'react'\nimport { SectionDivider } from 'Components/SectionDivider'\nimport { SpotCard } from 'Components/Cards'\nimport { MyMap } from 'Components/Map'\nimport placeholder from 'assets/images/placeholders/placeholderBig.png'\nconst DetailPage = () => {\n  const navigate = useNavigate()\n  const { colorMode } = useColorMode()\n  const [currentDetail, setCurrentDetail] = useState({})\n  const [nearbySpots, setNearbySpots] = useState([])\n  const [nearbyRests, setNearbyRests] = useState([])\n  const [nearbySleeps, setNearbySleeps] = useState([])\n  const { target, id } = useParams()\n  const [nearbyScenicSpots, searchNearbyScenicSpots] = useNearby({\n    target: 'ScenicSpot'\n  })\n  const [nearbyRestaurants, searchNearbyRestaurants] = useNearby({\n    target: 'Restaurant'\n  })\n  const [nearbyHotels, searchNearbyHotels] = useNearby({\n    target: 'Hotel'\n  })\n  const [detail, search] = useDetail({ target }, id)\n  const isInitialMount = useRef(true)\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false\n    } else {\n      search(id)\n    }\n  }, [])\n  useEffect(() => {\n    setCurrentDetail(detail)\n    // console.log(currentDetail)\n  }, [detail])\n  useEffect(() => {\n    currentDetail[0] &&\n      searchNearbyScenicSpots({\n        lat: currentDetail[0].Position.PositionLat,\n        lon: currentDetail[0].Position.PositionLon\n      })\n    currentDetail[0] &&\n      searchNearbyRestaurants({\n        lat: currentDetail[0].Position.PositionLat,\n        lon: currentDetail[0].Position.PositionLon\n      })\n    currentDetail[0] &&\n      searchNearbyHotels({\n        lat: currentDetail[0].Position.PositionLat,\n        lon: currentDetail[0].Position.PositionLon\n      })\n  }, [currentDetail])\n  useEffect(() => {\n    setNearbySpots(nearbyScenicSpots)\n  }, [nearbyScenicSpots])\n  useEffect(() => {\n    setNearbyRests(nearbyRestaurants)\n  }, [nearbyRestaurants])\n  useEffect(() => {\n    setNearbySleeps(nearbyHotels)\n  }, [nearbyHotels])\n  const renderTag = (tagItem) => {\n    return tagItem ? (\n      <Flex\n        borderRadius=\"16px\"\n        py={1.5}\n        px={3}\n        background=\"brand.100\"\n        color=\"white\"\n        fontSize=\"14px\"\n      >\n        {tagItem}\n      </Flex>\n    ) : (\n      ''\n    )\n  }\n  const renderNearby = (target, spots) => {\n    return spots.map((spot) => (\n      <SpotCard\n        key={spot.ID}\n        spot={spot}\n        onClick={() => navigate(`/${target}/detail/${spot.ID}`)}\n      />\n    ))\n  }\n  return currentDetail[0] ? (\n    <VStack gridGap={7} my={14}>\n      <Grid\n        w=\"80%\"\n        templateColumns={{\n          base: 'repeat(1, 1fr)',\n          lg: 'repeat(2, 1fr)'\n        }}\n        gridGap={5}\n      >\n        <Image\n          backgroundColor=\"white\"\n          borderRadius=\"16px\"\n          src={\n            currentDetail[0].Picture.PictureUrl1\n              ? currentDetail[0].Picture.PictureUrl1\n              : placeholder\n          }\n          h=\"100%\"\n        ></Image>\n        <Flex flexDirection=\"column\" gridGap={3}>\n          <Text color=\"brand.orange\" fontSize={{ base: '14px', md: '16px' }}>\n            {currentDetail[0].City}\n          </Text>\n          <Flex gridGap={3}>\n            {renderTag(currentDetail[0].Class1)}\n            {renderTag(currentDetail[0].Class2)}\n            {renderTag(currentDetail[0].Class3)}\n            {renderTag(currentDetail[0].Level)}\n          </Flex>\n          <Heading\n            size=\"md\"\n            color={colorMode === 'light' ? 'brand.200' : 'whiteAlpha.900'}\n          >\n            {currentDetail[0].Name}\n          </Heading>\n          <Divider />\n          <List spacing={3} my={2}>\n            <ListItem wordBreak=\"break-all\">\n              <ListIcon\n                as={FiClock}\n                w=\"20px\"\n                h=\"20px\"\n                color={colorMode === 'light' ? 'brand.200' : 'whiteAlpha.900'}\n              />\n              {currentDetail[0].OpenTime ? currentDetail[0].OpenTime : '無資訊'}\n            </ListItem>\n            {currentDetail[0].Phone && (\n              <ListItem wordBreak=\"break-all\">\n                <ListIcon\n                  as={FaPhoneAlt}\n                  w=\"20px\"\n                  h=\"20px\"\n                  color={colorMode === 'light' ? 'brand.200' : 'whiteAlpha.900'}\n                />\n                <a href={`tel: +${currentDetail[0].Phone}`}>\n                  {currentDetail[0].Phone}\n                </a>\n              </ListItem>\n            )}\n            {currentDetail[0].WebsiteUrl && (\n              <ListItem wordBreak=\"break-all\">\n                <ListIcon\n                  as={RiGlobalLine}\n                  w=\"25px\"\n                  h=\"25px\"\n                  color={colorMode === 'light' ? 'brand.200' : 'whiteAlpha.900'}\n                />\n                <a\n                  href={currentDetail[0].WebsiteUrl}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {currentDetail[0].WebsiteUrl}\n                </a>\n              </ListItem>\n            )}\n            {currentDetail[0].Position && (\n              <ListItem wordBreak=\"break-all\">\n                <ListIcon\n                  as={FiMapPin}\n                  w=\"25px\"\n                  h=\"25px\"\n                  color={colorMode === 'light' ? 'brand.200' : 'whiteAlpha.900'}\n                />\n                <a\n                  href={`http://www.google.com/maps/place/${currentDetail[0].Position.PositionLat},${currentDetail[0].Position.PositionLon}`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {currentDetail[0].Name}\n                </a>\n              </ListItem>\n            )}\n            {currentDetail[0].Grade && (\n              <ListItem wordBreak=\"break-all\">\n                <ListIcon\n                  as={AiFillStar}\n                  w=\"25px\"\n                  h=\"25px\"\n                  color={colorMode === 'light' ? 'brand.200' : 'whiteAlpha.900'}\n                />\n                {currentDetail[0].Grade}\n              </ListItem>\n            )}\n            <Divider />\n          </List>\n          <Text>{currentDetail[0].DescriptionDetail}</Text>\n        </Flex>\n      </Grid>\n      <MyMap\n        lat={currentDetail[0] && currentDetail[0].Position.PositionLat}\n        lng={currentDetail[0] && currentDetail[0].Position.PositionLon}\n        name={currentDetail[0].Name}\n      />\n      <VStack px={5}>\n        <SectionDivider\n          title=\"附近景點\"\n          color={colorMode === 'light' ? 'brand.200' : 'brand.100'}\n        />\n      </VStack>\n      <Grid\n        w=\"80%\"\n        templateColumns={{\n          base: 'repeat(1, 1fr)',\n          sm: 'repeat(2, 1fr)',\n          lg: 'repeat(3, 1fr)',\n          xl: 'repeat(4, 1fr)'\n        }}\n        gridGap={5}\n      >\n        {renderNearby('ScenicSpot', nearbySpots)}\n      </Grid>\n      <VStack px={5}>\n        <SectionDivider\n          title=\"附近餐廳\"\n          color={colorMode === 'light' ? 'brand.200' : 'brand.100'}\n        />\n      </VStack>\n      <Grid\n        w=\"80%\"\n        templateColumns={{\n          base: 'repeat(1, 1fr)',\n          sm: 'repeat(2, 1fr)',\n          lg: 'repeat(3, 1fr)',\n          xl: 'repeat(4, 1fr)'\n        }}\n        gridGap={5}\n      >\n        {renderNearby('Restaurant', nearbyRests)}\n      </Grid>\n      <VStack px={5}>\n        <SectionDivider\n          title=\"附近住宿\"\n          color={colorMode === 'light' ? 'brand.200' : 'brand.100'}\n        />\n      </VStack>\n      <Grid\n        w=\"80%\"\n        templateColumns={{\n          base: 'repeat(1, 1fr)',\n          sm: 'repeat(2, 1fr)',\n          lg: 'repeat(3, 1fr)',\n          xl: 'repeat(4, 1fr)'\n        }}\n        gridGap={5}\n      >\n        {renderNearby('Hotel', nearbySleeps)}\n      </Grid>\n    </VStack>\n  ) : (\n    <VStack gridGap={7} my={14}>\n      <Grid\n        w=\"80%\"\n        templateColumns={{\n          base: 'repeat(1, 1fr)',\n          md: 'repeat(2, 1fr)'\n        }}\n        gridGap={5}\n      ></Grid>\n    </VStack>\n  )\n}\n\nexport default DetailPage\n"],"sourceRoot":""}